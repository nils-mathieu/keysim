//! This module provides some utility functions.

use x11::xlib::KeySym;

use crate::Key;

/// Converts a [`Key`] into a [`KeySym`].
pub fn key_to_keysym(key: Key) -> KeySym {
    use x11::keysym;

    match key {
        Key::A => keysym::XK_A as KeySym,
        Key::B => keysym::XK_B as KeySym,
        Key::C => keysym::XK_C as KeySym,
        Key::D => keysym::XK_D as KeySym,
        Key::E => keysym::XK_E as KeySym,
        Key::F => keysym::XK_F as KeySym,
        Key::G => keysym::XK_G as KeySym,
        Key::H => keysym::XK_H as KeySym,
        Key::I => keysym::XK_I as KeySym,
        Key::J => keysym::XK_J as KeySym,
        Key::K => keysym::XK_K as KeySym,
        Key::L => keysym::XK_L as KeySym,
        Key::M => keysym::XK_M as KeySym,
        Key::N => keysym::XK_N as KeySym,
        Key::O => keysym::XK_O as KeySym,
        Key::P => keysym::XK_P as KeySym,
        Key::Q => keysym::XK_Q as KeySym,
        Key::R => keysym::XK_R as KeySym,
        Key::S => keysym::XK_S as KeySym,
        Key::T => keysym::XK_T as KeySym,
        Key::U => keysym::XK_U as KeySym,
        Key::V => keysym::XK_V as KeySym,
        Key::W => keysym::XK_W as KeySym,
        Key::X => keysym::XK_X as KeySym,
        Key::Y => keysym::XK_Y as KeySym,
        Key::Z => keysym::XK_Z as KeySym,
        Key::F1 => keysym::XK_F1 as KeySym,
        Key::F2 => keysym::XK_F2 as KeySym,
        Key::F3 => keysym::XK_F3 as KeySym,
        Key::F4 => keysym::XK_F4 as KeySym,
        Key::F5 => keysym::XK_F5 as KeySym,
        Key::F6 => keysym::XK_F6 as KeySym,
        Key::F7 => keysym::XK_F7 as KeySym,
        Key::F8 => keysym::XK_F8 as KeySym,
        Key::F9 => keysym::XK_F9 as KeySym,
        Key::F10 => keysym::XK_F10 as KeySym,
        Key::F11 => keysym::XK_F11 as KeySym,
        Key::F12 => keysym::XK_F12 as KeySym,
        Key::F13 => keysym::XK_F13 as KeySym,
        Key::F14 => keysym::XK_F14 as KeySym,
        Key::F15 => keysym::XK_F15 as KeySym,
        Key::F16 => keysym::XK_F16 as KeySym,
        Key::F17 => keysym::XK_F17 as KeySym,
        Key::F18 => keysym::XK_F18 as KeySym,
        Key::F19 => keysym::XK_F19 as KeySym,
        Key::F20 => keysym::XK_F20 as KeySym,
        Key::F21 => keysym::XK_F21 as KeySym,
        Key::F22 => keysym::XK_F22 as KeySym,
        Key::F23 => keysym::XK_F23 as KeySym,
        Key::F24 => keysym::XK_F24 as KeySym,
        Key::Zero => keysym::XK_0 as KeySym,
        Key::One => keysym::XK_1 as KeySym,
        Key::Two => keysym::XK_2 as KeySym,
        Key::Three => keysym::XK_3 as KeySym,
        Key::Four => keysym::XK_4 as KeySym,
        Key::Five => keysym::XK_5 as KeySym,
        Key::Six => keysym::XK_6 as KeySym,
        Key::Seven => keysym::XK_7 as KeySym,
        Key::Eight => keysym::XK_8 as KeySym,
        Key::Nine => keysym::XK_9 as KeySym,
        Key::Escape => keysym::XK_Escape as KeySym,
        Key::Tab => keysym::XK_Tab as KeySym,
        Key::CapsLock => keysym::XK_Caps_Lock as KeySym,
        Key::LeftShift => keysym::XK_Shift_L as KeySym,
        Key::LeftControl => keysym::XK_Control_L as KeySym,
        Key::LeftAlt => keysym::XK_Alt_L as KeySym,
        Key::LeftMeta => keysym::XK_Meta_L as KeySym,
        Key::Space => keysym::XK_space as KeySym,
        Key::RightMeta => keysym::XK_Meta_R as KeySym,
        Key::RightAlt => keysym::XK_Alt_R as KeySym,
        Key::RightControl => keysym::XK_Control_R as KeySym,
        Key::RightShift => keysym::XK_Shift_R as KeySym,
        Key::Enter => keysym::XK_Return as KeySym,
        Key::Backspace => keysym::XK_BackSpace as KeySym,
        Key::Insert => keysym::XK_Insert as KeySym,
        Key::Delete => keysym::XK_Delete as KeySym,
        Key::Home => keysym::XK_Home as KeySym,
        Key::End => keysym::XK_End as KeySym,
        Key::PageUp => keysym::XK_Page_Up as KeySym,
        Key::PageDown => keysym::XK_Page_Down as KeySym,
        Key::ArrowUp => keysym::XK_Up as KeySym,
        Key::ArrowDown => keysym::XK_Down as KeySym,
        Key::ArrowLeft => keysym::XK_Left as KeySym,
        Key::ArrowRight => keysym::XK_Right as KeySym,
        Key::NumLock => keysym::XK_Num_Lock as KeySym,
        Key::NumpadEqual => keysym::XK_KP_Equal as KeySym,
        Key::NumpadDivide => keysym::XK_KP_Divide as KeySym,
        Key::NumpadMultiply => keysym::XK_KP_Multiply as KeySym,
        Key::NumpadAdd => keysym::XK_KP_Add as KeySym,
        Key::NumpadEnter => keysym::XK_KP_Enter as KeySym,
        Key::NumpadDecimal => keysym::XK_KP_Decimal as KeySym,
        Key::Numpad0 => keysym::XK_KP_0 as KeySym,
        Key::Numpad1 => keysym::XK_KP_1 as KeySym,
        Key::Numpad2 => keysym::XK_KP_2 as KeySym,
        Key::Numpad3 => keysym::XK_KP_3 as KeySym,
        Key::Numpad4 => keysym::XK_KP_4 as KeySym,
        Key::Numpad5 => keysym::XK_KP_5 as KeySym,
        Key::Numpad6 => keysym::XK_KP_6 as KeySym,
        Key::Numpad7 => keysym::XK_KP_7 as KeySym,
        Key::Numpad8 => keysym::XK_KP_8 as KeySym,
        Key::Numpad9 => keysym::XK_KP_9 as KeySym,
        Key::VolumeUp => keysym::XF86XK_AudioRaiseVolume as KeySym,
        Key::VolumeDown => keysym::XF86XK_AudioLowerVolume as KeySym,
        Key::VolumeMute => keysym::XF86XK_AudioMute as KeySym,
        Key::MediaNext => keysym::XF86XK_AudioNext as KeySym,
        Key::MediaPrevious => keysym::XF86XK_AudioPrev as KeySym,
        Key::MediaStop => keysym::XF86XK_AudioStop as KeySym,
        Key::MediaPause => keysym::XF86XK_AudioPause as KeySym,
    }
}
